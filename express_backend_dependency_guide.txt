npm init -y

# Production dependencies
npm install express dotenv jsonwebtoken bcryptjs helmet cors xss-clean express-rate-limit sequelize mysql2 oracledb cookie-parser express-validator mssql

# Development dependencies
npm install --save-dev typescript ts-node nodemon @types/express @types/node @types/jsonwebtoken @types/bcryptjs @types/helmet @types/cors @types/express-rate-limit @types/cookie-parser

npm install sequelize tedious
npm install --save-dev typescript ts-node @types/node

for validation

npm install zod


Using ts-node with nodemon (Development Mode) :

Add a script to your package.json:


{
  "scripts": {
    "dev": "nodemon --watch 'src/**/*.ts' --exec ts-node src/server.ts"
  }
}

npm run dev

Building the Project and Running with Node (Production Mode) :

{
  "scripts": {
    "build": "tsc",
    "start": "node dist/server.js"
  }
}

npm run build

npm start


connection check with mssql db command 

ts-node src/utils/testMSSQL.ts

check data list from mssql 

ts-node src/utils/testETL.ts

Error: listen EADDRINUSE: address already in use :::5000

netstat -ano | findstr :5000
soln : taskkill /PID 12345 /F

restart typescript and cache clear command
npx tsc --build --clean


add ts config path

npm install --save-dev tsconfig-paths


